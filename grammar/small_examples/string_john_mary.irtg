// 4 interpretation IRTG for the sentence "John loves Mary's cat."

interpretation string: de.up.ling.irtg.algebra.StringAlgebra
interpretation tree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation ud: de.up.ling.irtg.algebra.graph.GraphAlgebra
interpretation fourlang: de.up.ling.irtg.algebra.graph.GraphAlgebra

// Sample inputs:

// string
// John loves Mary SQs cat

//tree
// S(NP(NNP(John)), VP2(VBZ(loves), NP2(NP2(NNP(Mary), POS(SQs)), NN(cat))))

// UD
// (loves_VBZ / loves :obj (cat_NN / cat :nmod_poss (Mary_NNP / Mary :case (SQs_POS / SQs))) :nsubj (John_NNP / John))


// Root:

S! -> _nsubj(NP, VP)
[string] *(?1, ?2)
[tree] S(?1,?2)
[ud] f_dep(merge_root_dep(merge("(r<root> :nsubj (d<dep>))", ?2), ?1))
[fourlang] f_dep(merge_root_dep(merge("(r<root> :1 (d<dep>))", ?2), ?1))

// Rules:

VP -> _obj(VBZ, NP)
[string] *(?1, ?2)
[tree] VP2(?1,?2)
[ud] f_dep(merge_root_dep(merge("(r<root> :obj (d<dep>))", ?1), ?2))
[fourlang] f_dep(merge_root_dep(merge("(r<root> :2 (d<dep>))", ?1), ?2))

NP -> _nmod_poss(NP, NN)
[string] *(?1, ?2)
[tree] NP2(?1,?2)
[ud] f_dep(merge_root_dep(merge("(r<root> :nmod_poss (d<dep>))", ?2), ?1))
[fourlang] f_dep(merge_root_dep(merge("(HAS / HAS :1 (d<dep>) :2 (r<root>))", ?2), ?1))

NP -> _case(NNP, POS)
[string] *(?1, ?2)
[tree] NP2(?1,?2)
[ud] f_dep(merge_root_dep(merge("(r<root> :case (d<dep>))", ?1), ?2))
[fourlang] ?1

NP -> _one_proper_name(NNP)
[string] ?1
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

// Terminals:

NNP -> John_NNP
[string] John
[tree] NNP(John)
[ud] "(John<root> / John)"
[fourlang] "(John<root> / John)"

VBZ -> loves_VBZ
[string] loves
[tree] VBZ(loves)
[ud] "(loves<root> / loves)"
[fourlang] "(loves<root> / loves)"

NNP -> Mary_NNP
[string] Mary
[tree] NNP(Mary)
[ud] "(Mary<root> / Mary)"
[fourlang] "(Mary<root> / Mary)"

POS -> SQs_POS
[string] SQs
[tree] POS(SQs)
[ud] "(SQs<root> / SQs)"
[fourlang] "(SQs<root> / SQs)"

NN -> cat_NN
[string] cat
[tree] NN(cat)
[ud] "(cat<root> / cat)"
[fourlang] "(cat<root> / cat)"
