interpretation tree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation ud: de.up.ling.irtg.algebra.graph.GraphAlgebra
interpretation fourlang: de.up.ling.irtg.algebra.graph.GraphAlgebra



//UPPER NODES
//UPPER NODES

//entry point
S!-> sentence(NP)
[tree] ?1
[ud] ?1
[fourlang] ?1



//LOWER NODES
//LOWER NODES


//Three order Noun Phrases
//Connecting the Determinant to the NounPhrase Part
NP -> partWithDeterminant(DT,NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dependent(merge("(r<root> :det (d<dependent>))",r_dependent(?1))),?2)
[fourlang] ?2

//Connecting the CardinalNumber to the NounPhrase Part
NP -> partWithCardinalNumber(CD,NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dependent(merge("(r<root> :nummod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD DIGITSCOLONDIGITS) (RB pPERIODm) (PERIOD PERIOD))
//Connecting the Adverb and the Period
NP_BAR -> advmodPeriodPart(RB,PERIOD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :advmod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD DIGITSCOMMADIGITSCOMMADIGITS) (JJ common) (NNS shares))
//Connecting the Adjective and the Prular Noun
NP_BAR -> amodNounPrularPart(JJ,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :amod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD One) (JJ big) (NN reason))
//Connecting the Adjective and the Noun
NP_BAR -> amodNounPart(JJ,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :amod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD One) (NN trial) (NN balloon))
//Connecting two Nouns
NP_BAR -> CompoundPart(NNbasic,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :compound (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :comp (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD two) (NN company) (NNS officials))
//Connecting a Noun and a PluralNoun
NP_BAR -> CompoundPluralPart(NNbasic,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :compound (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :comp (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD DIGITS) (NNS years) (JJ old))
//Connecting a Noun and an Adjective
NP_BAR -> amodNounRevPart(NNbasic,JJ)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :amod (d<dependent>))",r_dependent(?2))),?1)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?2))),?1)

//(NP (CD one) (NN month) (POS SQs))
//Connecting a Noun and an PossessiveEnding
NP_BAR -> amodPosNounPart(NNbasic,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :amod (d<dependent>))",r_dependent(?2))),?1)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?2))),?1)

//(NP (CD DIGITS) (CD DIGITSBSLPERDIGITS) (NN PERCENT))
//Connecting a CardinalNumber and a Noun
NP_BAR -> nummodNounPart(CD,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :nummod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD DIGITS) (VBN selected) (NNS issues))
//Connecting a  and a Noun
NP_BAR -> amodPPVNounPart(VBN,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dependent(merge("(r<root> :amod (d<dependent>))",r_dependent(?1))),?2)
[fourlang] merge(f_dependent(merge("(r<root> :_ (d<dependent>))",r_dependent(?1))),?2)

//(NP (CD DIGITS) (CC and) (CD DIGITS))
//Connecting a PastParticleVerb and a Noun
NP_COO_CD -> coordination_CC_CD_Part(CC,CD)
[tree] NP3(*,?1,?2)
[ud] ?2
[fourlang] ?2
//Connecting the CardinalNumber to the NounPhrase Part
NP -> CardinalNumberList(CD,NP_COO_CD)
[tree] @(?2,?1)
[ud] r_root(merge(f_dependent(merge("(r1<dependent> :conj_and (r2<root>))",r_dependent(?1))),?2))
[fourlang] merge(?1,?2)


//LEAVES
//LEAVES

//Conjunction
//stuff
CC -> stuff_Conjunction
[tree] CC(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Cardinal_Numbers
//stuff
CD -> stuff_CardinalNumber
[tree] CD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Determiners
//stuff
DT -> stuff_Determiner
[tree] DT(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//IQIQ
//IQIQ
IQIQ -> IQIQ
[tree] IQIQ1(IQIQ)
[ud] "(IQIQ<root>/IQIQ)"
[fourlang] "(IQIQ<root>/IQIQ)"

//Adjectives
//stuff
JJ -> stuff_Adjective
[tree] JJ(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Nouns
	//Basic
	//converter
	NN -> toNoun(NNbasic)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	NNbasic -> stuff_Noun
	[tree] NN(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"
	
	//Proper
	//converter
	NN -> toNoun(NNP)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	NNP -> stuff_NounProper
	[tree] NNP(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

	//Plural
	//converter
	NN -> toNoun(NNS)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	NNS -> stuff_NounPrular
	[tree] NNS(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

//PERIOD
//PERIOD
PERIOD -> PERIOD
[tree] PERIOD1(PERIOD)
[ud] "(PERIOD<root>/PERIOD)"
[fourlang] "(PERIOD<root>/PERIOD)"

//Predeterminers
//stuff
PDT -> stuff_Predeterminers
[tree] PDT(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Possessive_Endings
//stuff
POS -> stuff_PossessiveEnding
[tree] POS(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Personal_Pronouns
//stuff
PRP -> stuff_PronounsPersonal
[tree] PRP(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Possessive_Pronouns
//stuff
PRP$ -> stuff_PronounPossessive
[tree] PRP$(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Adverbs
//stuff
RB -> stuff_Adverbs
[tree] RB(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Verbs
	//Basic
	//converter
	VB -> toVerb(VBbasic)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	VBbasic -> stuff_Verb
	[tree] VB(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

	//Gerund|Present_Participle
	//converter
	VB -> toVerb(VG)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	VG -> stuff_VerbGerund
	[tree] VG(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

	//Past_Verbs
	//converter
	VB -> toVerb(VBD)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	VBD -> stuff_VerbPast
	[tree] VBD(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

	//Past_Particle_Verb
	//converter
	VB -> toVerb(VBN)
	[tree] ?1
	[ud] ?1
	[fourlang] ?1
	//stuff
	VBN -> stuff_VerbPastParticle
	[tree] VBN(stuff)
	[ud] "(stuff<root>/stuff)"
	[fourlang] "(stuff<root>/stuff)"

//Wh-Pronoun
WP -> stuff_PronounWh
[tree] WP(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"
