interpretation tree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation ud: de.up.ling.irtg.algebra.graph.GraphAlgebra
interpretation fourlang: de.up.ling.irtg.algebra.graph.GraphAlgebra

//UPPER NODES
//UPPER NODES

//entry point
S! -> sentence(NP)
[tree] ?1
[ud] ?1
[fourlang] ?1




//LOWER NODES
//LOWER NODES

//Noun_Phrases
//Noun_Phrases

//unary
//unary

//NounPhrase out of one CardinalNumber
//NP(WD(nine))
NP -> one_CD(CD)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Determinant
//NP(WD(the))
NP -> one_DT(DT)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one ForeignWord
//NP(FW(Perestroika))
NP -> one_FW(FW)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Preposition
//NP(IN(that))
NP -> one_IN(IN)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Adjective
//NP(JJ(small))
NP -> one_JJ(JJ)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Noun
//NP(NN(cat))
NP -> one_NN(NN)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PersonalPronoun
//NP(PRP(it))
NP -> one_PRP(PRP)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PrologePossessivePronoun
//NP(PRP$(her))
NP -> one_PRP$(PRP$)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Adverb
//NP(RB(then))
NP -> one_RB(RB)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Verb
//NP(VB(favor))
NP -> one_VB(VB)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one WhDeterminer
//NP(WDT(that))
NP -> one_WDT(WDT)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1




//TERMINALS
//TERMINALS

//Converters
//Converters

//Nouns
//Nouns

//basic
NN -> NNbasic_2_NN(NNbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//proper
NN -> NNP_2_NN(NNP)
[tree] ?1
[ud] ?1
[fourlang] ?1

//plural
NN -> NNS_2_NN(NNS)
[tree] ?1
[ud] ?1
[fourlang] ?1

//proper plural
NN -> NNPS_2_NN(NNPS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Adjectives
//Adjectives

//basic
JJ -> JJbasic_2_JJ(JJbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//comparative
JJ -> JJR_2_JJ(JJR)
[tree] ?1
[ud] ?1
[fourlang] ?1

//superlative
JJ -> JJS_2_JJ(JJS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Adverbs
//Adverbs

//basic
RB -> RBbasic_2_RB(RBbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//comparative
RB -> RBR_2_RB(RBR)
[tree] ?1
[ud] ?1
[fourlang] ?1

//superlative
RB -> RBS_2_RB(RBS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Verbs
//Verbs

//basic
VB -> VBbasic_2_VB(VBbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//past tense
VB -> VBD_2_VB(VBD)
[tree] ?1
[ud] ?1
[fourlang] ?1

//gerund or present participle
VB -> VBG_2_VB(VBG)
[tree] ?1
[ud] ?1
[fourlang] ?1

//past participle
VB -> VBN_2_VB(VBN)
[tree] ?1
[ud] ?1
[fourlang] ?1

//non-3rd person singular present
VB -> VBP_2_VB(VBP)
[tree] ?1
[ud] ?1
[fourlang] ?1

//3rd person singular present
VB -> VBZ_2_VB(VBZ)
[tree] ?1
[ud] ?1
[fourlang] ?1



//Dictionary
//Dictionary

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Cardinal Numbers
//nine
CD -> nine_CD
[tree] CD(nine)
[ud] "(nine<root>/nine)"
[fourlang] "(nine<root>/nine)"

//Determinants
//the
DT -> the_DT
[tree] DT(the)
[ud] "(the<root>/the)"
[fourlang] "(the<root>/the)"

//ForeignWord
//Perestroika
FW -> Perestroika_FW
[tree] FW(Perestroika)
[ud] "(Perestroika<root>/Perestroika)"
[fourlang] "(Perestroika<root>/Perestroika)"

//Prepositions|SubordinatingConjunctions
//that
IN -> that_IN
[tree] IN(that)
[ud] "(that<root>/that)"
[fourlang] "(that<root>/that)"

//Adjective
//small
JJbasic -> small_JJ
[tree] JJ(small)
[ud] "(small<root>/small)"
[fourlang] "(small<root>/small)"

//Comparative Adjective
//smaller
JJR -> smaller_JJR
[tree] JJR(smaller)
[ud] "(smaller<root>/smaller)"
[fourlang] "(smaller<root>/smaller)"

//Superlative Adjective
//smallest
JJS -> smallest_JJS
[tree] JJS(smallest)
[ud] "(smallest<root>/smallest)"
[fourlang] "(smallest<root>/smallest)"

//Noun
//cat
NNbasic -> cat_NN
[tree] NN(cat)
[ud] "(cat<root>/cat)"
[fourlang] "(cat<root>/cat)"

//Plural Noun
//cats
NNS -> cats_NNS
[tree] NNS(cats)
[ud] "(cats<root>/cats)"
[fourlang] "(cats<root>/cats)"

//Proper Noun
//John
NNP -> John_NNP
[tree] NNP(John)
[ud] "(John<root>/John)"
[fourlang] "(John<root>/John)"

//Plural Proper Noun
//Engineers
NNPS -> Engineers_NNPS
[tree] NNPS(Engineers)
[ud] "(John<root>/John)"
[fourlang] "(John<root>/John)"

//Personal Pronoun
//it
PRP -> it_PRP
[tree] PRP(it)
[ud] "(it<root>/it)"
[fourlang] "(it<root>/it)"

//PrologePossessive Pronoun
//her
PRP$ -> her_PRP$
[tree] PRP$(her)
[ud] "(her<root>/her)"
[fourlang] "(her<root>/her)"

//Adverbs
//then
RB -> then_RB
[tree] RB(then)
[ud] "(then<root>/then)"
[fourlang] "(then<root>/then)"

//Comparative Adverb
//less
RBR -> less_RBR
[tree] RBR(less)
[ud] "(less<root>/less)"
[fourlang] "(less<root>/less)"

//Superlative Adverb
//most
RBS -> less_RBS
[tree] RBS(most)
[ud] "(most<root>/most)"
[fourlang] "(most<root>/most)"

//Verb
//favor
VB -> favor_VB
[tree] VB(favor)
[ud] "(favor<root>/favor)"
[fourlang] "(favor<root>/favor)"

//Gerund|PresentParticiple Verb
//checking
VBG -> checking_VBG
[tree] VBG(checking)
[ud] "(checking<root>/checking)"
[fourlang] "(checking<root>/checking)"

//WhDeterminer
//that
WDT -> that_WDT
[tree] WDT(that)
[ud] "(that<root>/that)"
[fourlang] "(that<root>/that)"

