interpretation tree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation ud: de.up.ling.irtg.algebra.graph.GraphAlgebra
interpretation fourlang: de.up.ling.irtg.algebra.graph.GraphAlgebra

//UPPER NODES
//UPPER NODES

//entry point
S! -> sentence(NP)
[tree] ?1
[ud] ?1
[fourlang] ?1




//LOWER NODES
//LOWER NODES

//Noun_Phrases
//Noun_Phrases

//unary
//unary

//NounPhrase out of one PluralNoun.
//(NP (NNS abortions))
//NP( NNS( abortions))
NP -> one_NNS(NNS)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one SingularProperNoun.
//(NP (NNP AIDS))
//NP( NNP( AIDS))
NP -> one_NNP(NNP)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Adjective.
//(NP (JJ Average))
//NP( JJ( Average))
NP -> one_JJ(JJ)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Verb.
//(NP (VB favor))
//NP( VB( favor))
NP -> one_VB(VBbasic)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one CardinalNumber.
//(NP (CD 0.0085))
//NP( CD( _DIGITS_PERIOD_DIGITS_))
NP -> one_CD(CD)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PrepositionOrSubordinatingConjunction.
//(NP (IN that))
//NP( IN( that))
NP -> one_IN(IN)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PluralProperNoun.
//(NP (NNPS Americans))
//NP( NNPS( Americans))
NP -> one_NNPS(NNPS)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Determiner.
//(NP (DT all))
//NP( DT( all))
NP -> one_DT(DT)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Comparative Adverb.
//(NP (RBR less))
//NP( RBR( less))
NP -> one_RBR(RBR)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PossessivePronoun.
//(NP (PRP$ her))
//NP( PRP_DOLLAR_( her))
NP -> one_PRP_DOLLAR_(PRP_DOLLAR_)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Adverb.
//(NP (RB above))
//NP( RB( above))
NP -> one_RB(RBbasic)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Gerund|PresentParticipleVerb.
//(NP (VBG checking))
//NP( VBG( checking))
NP -> one_VBG(VBG)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Noun.
//(NP (NN 1\/10th))
//NP( NN( _DIGITS_BSL_PER_DIGITS_th))
NP -> one_NN(NNbasic)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one ForeignWord.
//(NP (FW Perestroika))
//NP( FW( Perestroika))
NP -> one_FW(FW)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one PersonalPronoun.
//(NP (PRP he))
//NP( PRP( he))
NP -> one_PRP(PRP)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one SuperlativeAdverb.
//(NP (RBS most))
//NP( RBS( most))
NP -> one_RBS(RBS)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one SuperlativeAdjective.
//(NP (JJS most))
//NP( JJS( most))
NP -> one_JJS(JJS)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one Wh-Determiner.
//(NP (WDT that))
//NP( WDT( that))
NP -> one_WDT(WDT)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1

//NounPhrase out of one ComparativeAdjective.
//(NP (JJR less))
//NP( JJR( less))
NP -> one_JJR(JJR)
[tree] NP(?1)
[ud] ?1
[fourlang] ?1


//binary
//binary

//NounPhrase out of a Gerund|PresentParticipleVerband a Determiner (which is a determiner). 
//NP2( DT( The), VBG( following))
//(NP (DT The) (VBG following))
NP -> det_DT_VBG(DT,VBG)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?1))),?2)
[fourlang] ?2

//NounPhrase out of a SingularProperNoun (which is a adjectival modifier) and a Gerund|PresentParticipleVerb.
//NP2( VBG( neighboring), NNP( Angola))
//(NP (VBG neighboring) (NNP Angola))
NP -> amod_VBG_NNP(VBG,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a compound) and a PluralNoun.
//NP2( NNS( arms), NN( control))
//(NP (NNS arms) (NN control))
NP -> compound_NNS_NN(NNS,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a compound) and a Noun.
//NP2( NN( administration), NNS( officials))
//(NP (NN administration) (NNS officials))
NP -> compound_NN_NNS(NNbasic,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a ComparativeAdjective (which is a adverbial modifier) and a Adverb.
//NP2( RB( much), JJR( less))
//(NP (RB much) (JJR less))
NP -> advmod_RB_JJR(RBbasic,JJR)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralProperNoun (which is a compound) and a SingularProperNoun.
//NP2( NNP( Allied), NNPS( Craftsmen))
//(NP (NNP Allied) (NNPS Craftsmen))
NP -> compound_NNP_NNPS(NNP,NNPS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PossessiveEndingand a CardinalNumber (which is a case marking). 
//NP2( CD( _DIGITS_), POS( _SQ_s))
//(NP (CD 1992) (POS 's))
NP -> case_CD_POS(CD,POS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//NounPhrase out of a Noun (which is a unspecified dependency) and a Verb.
//NP2( VB( Put), NN( option))
//(NP (VB Put) (NN option))
NP -> dep_VB_NN(VBbasic,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a determiner) and a Determiner.
//NP2( DT( All), NNS( arguments))
//(NP (DT All) (NNS arguments))
NP -> det_DT_NNS(DT,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a SingularProperNoun (which is a possessive nominal modifier) and a PossessivePronoun.
//NP2( PRP_DOLLAR_( his), NNP( Artist))
//(NP (PRP$ his) (NNP Artist))
NP -> nmod_COLON_poss_PRP_DOLLAR__NNP(PRP_DOLLAR_,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of a SuperlativeAdjective (which is a determiner) and a Determiner.
//NP2( DT( the), JJS( best))
//(NP (DT the) (JJS best))
NP -> det_DT_JJS(DT,JJS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PossessiveEndingand a SingularProperNoun (which is a case marking). 
//NP2( NNP( Alzheimer), POS( _SQ_s))
//(NP (NNP Alzheimer) (POS 's))
NP -> case_NNP_POS(NNP,POS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//NounPhrase out of a PluralNoun (which is a adjectival modifier) and a Adjective.
//NP2( JJ( _DIGITS_HYPHEN_day), NNS( suspensions))
//(NP (JJ 10-day) (NNS suspensions))
NP -> amod_JJ_NNS(JJbasic,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a CardinalNumberand a SingularProperNoun (which is a numeric modifier). 
//NP2( NNP( April), CD( _DIGITS_))
//(NP (NNP April) (CD 1986))
NP -> nummod_NNP_CD(NNP,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a Noun (which is a adjectival modifier) and a PastParticipleVerb.
//NP2( VBN( accrued), NN( interest))
//(NP (VBN accrued) (NN interest))
NP -> amod_VBN_NN(VBN,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SingularProperNoun (which is a adjectival modifier) and a Adjective.
//NP2( JJ( Atlanta_HYPHEN_based), NNP( Life))
//(NP (JJ Atlanta-based) (NNP Life))
NP -> amod_JJ_NNP(JJbasic,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a adjectival modifier) and a ComparativeAdjective.
//NP2( JJR( better), NNS( offices))
//(NP (JJR better) (NNS offices))
NP -> amod_JJR_NNS(JJR,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Gerund|PresentParticipleVerband a Noun (which is a adjectival modifier). 
//NP2( NN( consumer), VBG( banking))
//(NP (NN consumer) (VBG banking))
NP -> amod_NN_VBG(NNbasic,VBG)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of two Punctuation-s.
//NP2( NNP( Ark), PUNCT( _PERIOD_))
//(NP (NNP Ark) (. .))
NP -> undependent_NNP_PUNCT(NNP,PUNCT)
[tree] NP2(?1,?2)
[ud] ?2
[fourlang] ?2

//NounPhrase out of a Noun (which is a compound) and a SingularProperNoun.
//NP2( NNP( Campbell), NN( stock))
//(NP (NNP Campbell) (NN stock))
NP -> compound_NNP_NN(NNP,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SingularProperNoun (which is a flat multiword expression) and a SingularProperNoun.
//NP2( NNP( A_PERIOD_D_PERIOD_), NNP( Correll))
//(NP (NNP A.D.) (NNP Correll))
NP -> flat_NNP_NNP(NNP,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :flat (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_flat (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SuperlativeAdverband a Determiner (which is a determiner). 
//NP2( DT( the), RBS( most))
//(NP (DT the) (RBS most))
NP -> det_DT_RBS(DT,RBS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?1))),?2)
[fourlang] ?2

//NounPhrase out of a PluralNoun (which is a adjectival modifier) and a SuperlativeAdjective.
//NP2( JJS( most), NNS( alcoholics))
//(NP (JJS most) (NNS alcoholics))
NP -> amod_JJS_NNS(JJS,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a compound) and a SingularProperNoun.
//NP2( NNP( Beatles), NNS( lyrics))
//(NP (NNP Beatles) (NNS lyrics))
NP -> compound_NNP_NNS(NNP,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SuperlativeAdjective (which is a possessive nominal modifier) and a PossessivePronoun.
//NP2( PRP_DOLLAR_( his), JJS( finest))
//(NP (PRP$ his) (JJS finest))
NP -> nmod_COLON_poss_PRP_DOLLAR__JJS(PRP_DOLLAR_,JJS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of two Noun-s.
//NP2( PUNCT( _IQ_IQ_), NN( exposure))
//(NP (`` ``) (NN exposure))
NP -> undependent_PUNCT_NN(PUNCT,NNbasic)
[tree] NP2(?1,?2)
[ud] ?1
[fourlang] ?1

//NounPhrase out of a CardinalNumber (which is a determiner) and a Determiner.
//NP2( DT( a), CD( _DIGITS_HYPHEN_year_HYPHEN_old))
//(NP (DT a) (CD 75-year-old))
NP -> det_DT_CD(DT,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a Noun (which is a adjectival modifier) and a Adjective.
//NP2( JJ( _DIGITS_HYPHEN_day), NN( suspension))
//(NP (JJ 10-day) (NN suspension))
NP -> amod_JJ_NN(JJbasic,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adverband a CardinalNumber (which is a adverbial modifier). 
//NP2( CD( _DIGITS_COLON_DIGITS_), RB( p_PERIOD_m))
//(NP (CD 3:15) (RB p.m))
NP -> advmod_CD_RB(CD,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a PluralProperNoun (which is a compound) and a PluralProperNoun.
//NP2( NNPS( Securities), NNPS( Dealers))
//(NP (NNPS Securities) (NNPS Dealers))
NP -> compound_NNPS_NNPS(NNPS,NNPS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a compound) and a Noun.
//NP2( NN( acid), NN( rain))
//(NP (NN acid) (NN rain))
NP -> compound_NN_NN(NNbasic,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Determiner (which is a adverbial modifier) and a Adverb.
//NP2( RB( almost), DT( all))
//(NP (RB almost) (DT all))
NP -> advmod_RB_DT(RBbasic,DT)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a numeric modifier) and a CardinalNumber.
//NP2( CD( _DIGITS_PERIOD_DIGITS_), NN( _PERCENT_))
//(NP (CD 0.05) (NN %))
NP -> nummod_CD_NN(CD,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a adverbial modifier) and a Adverb.
//NP2( RB( even), NNS( words))
//(NP (RB even) (NNS words))
NP -> advmod_RB_NNS(RBbasic,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adverb (which is a determiner) and a Determiner.
//NP2( DT( a), RB( little))
//(NP (DT a) (RB little))
NP -> det_DT_RB(DT,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PluralNoun (which is a compound) and a PluralNoun.
//NP2( NNS( appropriations), NNS( acts))
//(NP (NNS appropriations) (NNS acts))
NP -> compound_NNS_NNS(NNS,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a CardinalNumber (which is a adjectival modifier) and a Adjective.
//NP2( JJ( early), CD( _DIGITS_))
//(NP (JJ early) (CD 1981))
NP -> amod_JJ_CD(JJbasic,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SingularProperNoun (which is a compound) and a PluralProperNoun.
//NP2( NNPS( Elders), NNP( Futures))
//(NP (NNPS Elders) (NNP Futures))
NP -> compound_NNPS_NNP(NNPS,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a adjectival modifier) and a Gerund|PresentParticipleVerb.
//NP2( VBG( Continuing), NN( demand))
//(NP (VBG Continuing) (NN demand))
NP -> amod_VBG_NN(VBG,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a CardinalNumber (which is a numeric modifier) and a CardinalNumber.
//NP2( CD( _DIGITS_), CD( _DIGITS_BSL_PER_DIGITS_))
//(NP (CD 100) (CD 16\/32))
NP -> nummod_CD_CD(CD,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a possessive nominal modifier) and a PossessivePronoun.
//NP2( PRP_DOLLAR_( her), NNS( actions))
//(NP (PRP$ her) (NNS actions))
NP -> nmod_COLON_poss_PRP_DOLLAR__NNS(PRP_DOLLAR_,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of a PersonalPronoun (which is a determiner) and a Determiner.
//NP2( DT( no), PRP( one))
//(NP (DT no) (PRP one))
NP -> det_DT_PRP(DT,PRP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a Noun (which is a adjectival modifier) and a PastTenseVerb.
//NP2( VBD( proposed), NN( offering))
//(NP (VBD proposed) (NN offering))
NP -> amod_VBD_NN(VBD,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adverband a PluralNoun (which is a adverbial modifier). 
//NP2( NNS( months), RB( ahead))
//(NP (NNS months) (RB ahead))
NP -> advmod_NNS_RB(NNS,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a SingularProperNoun (which is a determiner) and a Determiner.
//NP2( DT( a), NNP( Buick))
//(NP (DT a) (NNP Buick))
NP -> det_DT_NNP(DT,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PossessiveEndingand a PluralProperNoun (which is a case marking). 
//NP2( NNPS( Parkinson), POS( _SQ_s))
//(NP (NNPS Parkinson) (POS 's))
NP -> case_NNPS_POS(NNPS,POS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//NounPhrase out of a CardinalNumber (which is a adverbial modifier) and a Adverb.
//NP2( RB( just), CD( _DIGITS_PERIOD_DIGITS_))
//(NP (RB just) (CD 0.82))
NP -> advmod_RB_CD(RBbasic,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adverb (which is a adverbial modifier) and a Adverb.
//NP2( RB( very), RB( little))
//(NP (RB very) (RB little))
NP -> advmod_RB_RB(RBbasic,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adverband a Wh-Pronoun (which is a adverbial modifier). 
//NP2( WP( what), RB( else))
//(NP (WP what) (RB else))
NP -> advmod_WP_RB(WP,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a Adjective (which is a adverbial modifier) and a Adverb.
//NP2( RB( as), JJ( much))
//(NP (RB as) (JJ much))
NP -> advmod_RB_JJ(RBbasic,JJbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a adjectival modifier) and a Gerund|PresentParticipleVerb.
//NP2( VBG( advancing), NNS( issues))
//(NP (VBG advancing) (NNS issues))
NP -> amod_VBG_NNS(VBG,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a unspecified dependency) and a Verb.
//NP2( VB( risk), NNS( arbitragers))
//(NP (VB risk) (NNS arbitragers))
NP -> dep_VB_NNS(VBbasic,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SingularProperNoun (which is a compound) and a Noun.
//NP2( NN( one_HYPHEN_third), NNP( Neuberger))
//(NP (NN one-third) (NNP Neuberger))
NP -> compound_NN_NNP(NNbasic,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a adjectival modifier) and a ComparativeAdjective.
//NP2( JJR( broader), NN( use))
//(NP (JJR broader) (NN use))
NP -> amod_JJR_NN(JJR,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a SingularProperNoun (which is a adverbial modifier) and a Adverb.
//NP2( RB( notably), NNP( Britain))
//(NP (RB notably) (NNP Britain))
NP -> advmod_RB_NNP(RBbasic,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adjective (which is a possessive nominal modifier) and a PossessivePronoun.
//NP2( PRP_DOLLAR_( his), JJ( own))
//(NP (PRP$ his) (JJ own))
NP -> nmod_COLON_poss_PRP_DOLLAR__JJ(PRP_DOLLAR_,JJbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of a Noun (which is a adverbial modifier) and a Adverb.
//NP2( RB( currently), NN( chairman))
//(NP (RB currently) (NN chairman))
NP -> advmod_RB_NN(RBbasic,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a determiner) and a Determiner.
//NP2( DT( all), NN( propaganda))
//(NP (DT all) (NN propaganda))
NP -> det_DT_NN(DT,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a Adjectiveand a SingularProperNoun (which is a adjectival modifier). 
//NP2( NNP( Heritage), JJ( common))
//(NP (NNP Heritage) (JJ common))
NP -> amod_NNP_JJ(NNP,JJbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a Noun (which is a possessive nominal modifier) and a PossessivePronoun.
//NP2( PRP_DOLLAR_( her), NN( behalf))
//(NP (PRP$ her) (NN behalf))
NP -> nmod_COLON_poss_PRP_DOLLAR__NN(PRP_DOLLAR_,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of a PossessiveEndingand a PluralNoun (which is a case marking). 
//NP2( NNS( analysts), POS( _SQ_))
//(NP (NNS analysts) (POS '))
NP -> case_NNS_POS(NNS,POS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//NounPhrase out of a SingularProperNoun (which is a compound) and a PluralNoun.
//NP2( NNS( two_HYPHEN_thirds), NNP( Mariotta))
//(NP (NNS two-thirds) (NNP Mariotta))
NP -> compound_NNS_NNP(NNS,NNP)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Adjective (which is a determiner) and a Determiner.
//NP2( DT( a), JJ( _DIGITS_HYPHEN_year_HYPHEN_old))
//(NP (DT a) (JJ 17-year-old))
NP -> det_DT_JJ(DT,JJbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PluralProperNoun (which is a determiner) and a Determiner.
//NP2( DT( All), NNPS( Angels))
//(NP (DT All) (NNPS Angels))
NP -> det_DT_NNPS(DT,NNPS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PastTenseVerband a Determiner (which is a adjectival modifier). 
//NP2( DT( each), VBD( preferred))
//(NP (DT each) (VBD preferred))
NP -> amod_DT_VBD(DT,VBD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a Adverband a Noun (which is a adverbial modifier). 
//NP2( NN( anyone), RB( else))
//(NP (NN anyone) (RB else))
NP -> advmod_NN_RB(NNbasic,RBbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a Determiner (which is a predeterminant) and a PreDeterminer.
//NP2( PDT( all), DT( this))
//(NP (PDT all) (DT this))
NP -> det_COLON_predet_PDT_DT(PDT,DT)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det:predet (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a ComparativeAdjective (which is a determiner) and a Determiner.
//NP2( DT( the), JJR( better))
//(NP (DT the) (JJR better))
NP -> det_DT_JJR(DT,JJR)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//NounPhrase out of a PluralNoun (which is a compound) and a PluralProperNoun.
//NP2( NNPS( Mercedes), NNS( cars))
//(NP (NNPS Mercedes) (NNS cars))
NP -> compound_NNPS_NNS(NNPS,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralNoun (which is a adjectival modifier) and a PastParticipleVerb.
//NP2( VBN( accused), NNS( rapists))
//(NP (VBN accused) (NNS rapists))
NP -> amod_VBN_NNS(VBN,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a Noun (which is a possessive nominal modifier) and a PersonalPronoun.
//NP2( PRP( her), NN( job))
//(NP (PRP her) (NN job))
NP -> nmod_COLON_poss_PRP_NN(PRP,NNbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//NounPhrase out of a Gerund|PresentParticipleVerband a Adjective (which is a adjectival modifier). 
//NP2( JJ( moderate), VBG( trading))
//(NP (JJ moderate) (VBG trading))
NP -> amod_JJ_VBG(JJbasic,VBG)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a CardinalNumberand a Noun (which is a numeric modifier). 
//NP2( NN( age), CD( _DIGITS_))
//(NP (NN age) (CD 13))
NP -> nummod_NN_CD(NNbasic,CD)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//NounPhrase out of a PluralNoun (which is a numeric modifier) and a CardinalNumber.
//NP2( CD( _DIGITS_COMMA_DIGITS_), NNS( yen))
//(NP (CD 10,000) (NNS yen))
NP -> nummod_CD_NNS(CD,NNS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PossessiveEndingand a Noun (which is a case marking). 
//NP2( NN( anybody), POS( _SQ_s))
//(NP (NN anybody) (POS 's))
NP -> case_NN_POS(NNbasic,POS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//NounPhrase out of a Adjective (which is a numeric modifier) and a CardinalNumber.
//NP2( CD( one), JJ( right))
//(NP (CD one) (JJ right))
NP -> nummod_CD_JJ(CD,JJbasic)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//NounPhrase out of a PluralProperNoun (which is a adverbial modifier) and a Adverb.
//NP2( RB( Some), NNPS( Democrats))
//(NP (RB Some) (NNPS Democrats))
NP -> advmod_RB_NNPS(RBbasic,NNPS)
[tree] NP2(?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)


//ternary
//ternary

//complete
//

//a long NounPhrase out of a  NounPhrase Bar and a Adjective (which is a adjectival modifier). 
//NP3( JJ( _DIGITS_HYPHEN_year), NN( mortgage), NNS( commitments))
//(NP (JJ 30-year) (NN mortgage) (NNS commitments))
NP -> amod_JJ_NPBAR_Tail(JJbasic, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PrepositionOrSubordinatingConjunction (which is a adjectival modifier). 
//NP3( IN( about), CD( _DIGITS_), NN( _PERCENT_))
//(NP (IN about) (CD 80) (NN %))
NP -> amod_IN_NPBAR_Tail(IN, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a SingularProperNoun (which is a compound). 
//NP3( NNP( A_PERIOD_C_PERIOD_), NNP( Nielsen), NNP( Co))
//(NP (NNP A.C.) (NNP Nielsen) (NNP Co))
NP -> compound_NNP_NPBAR_Tail(NNP, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PluralProperNoun (which is a compound). 
//NP3( NNPS( GRAINS), NNP( AND), NNPS( SOYBEANS))
//(NP (NNPS GRAINS) (NNP AND) (NNPS SOYBEANS))
NP -> compound_NNPS_NPBAR_Tail(NNPS, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a SuperlativeAdjective (which is a adjectival modifier). 
//NP3( JJS( most), JJ( English), NNS( peculiarities))
//(NP (JJS most) (JJ English) (NNS peculiarities))
NP -> amod_JJS_NPBAR_Tail(JJS, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a ComparativeAdjective (which is a adjectival modifier). 
//NP3( JJR( better), NN( export), NNS( orders))
//(NP (JJR better) (NN export) (NNS orders))
NP -> amod_JJR_NPBAR_Tail(JJR, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PreDeterminer (which is a predeterminant). 
//NP3( PDT( all), DT( the), NN( furor))
//(NP (PDT all) (DT the) (NN furor))
NP -> det_COLON_predet_PDT_NPBAR_Tail(PDT, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :det:predet (d<dep>))", r_dep(?1))),?2)
[fourlang] ?2

//a long NounPhrase out of a  NounPhrase Bar and a Noun (which is a compound). 
//NP3( NN( achievement_HYPHEN_test), NN( preparation), NNS( booklets))
//(NP (NN achievement-test) (NN preparation) (NNS booklets))
NP -> compound_NN_NPBAR_Tail(NNbasic, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PersonalPronoun (which is a unspecified dependency). 
//NP3( PRP( her), NN( teaching), NN( certificate))
//(NP (PRP her) (NN teaching) (NN certificate))
NP -> dep_PRP_NPBAR_Tail(PRP, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PossessivePronoun (which is a possessive nominal modifier). 
//NP3( PRP_DOLLAR_( her), CD( _DIGITS_), NNS( years))
//(NP (PRP$ her) (CD 60) (NNS years))
NP -> nmod_COLON_poss_PRP_DOLLAR__NPBAR_Tail(PRP_DOLLAR_, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//a long NounPhrase out of a  NounPhrase Bar and a CardinalNumber (which is a numeric modifier). 
//NP3( CD( _DIGITS_COMMA_DIGITS_), NN( parking), NNS( spaces))
//(NP (CD 10,000) (NN parking) (NNS spaces))
NP -> nummod_CD_NPBAR_Tail(CD, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a Determiner (which is a determiner). 
//NP3( DT( a), CD( _DIGITS_), NN( law))
//(NP (DT a) (CD 1934) (NN law))
NP -> det_DT_NPBAR_Tail(DT, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?1))),?2)
[fourlang] ?2

//a long NounPhrase out of a  NounPhrase Bar and a Verb (which is a unspecified dependency). 
//NP3( VB( realestate), NN( loan), NNS( reserves))
//(NP (VB realestate) (NN loan) (NNS reserves))
NP -> dep_VB_NPBAR_Tail(VBbasic, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a PastParticipleVerb (which is a adjectival modifier). 
//NP3( VBN( advanced), NN( networking), NN( software))
//(NP (VBN advanced) (NN networking) (NN software))
NP -> amod_VBN_NPBAR_Tail(VBN, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a  NounPhrase Bar and a Gerund|PresentParticipleVerb (which is a adjectival modifier). 
//NP3( VBG( continuing), JJ( economic), NNS( problems))
//(NP (VBG continuing) (JJ economic) (NNS problems))
NP -> amod_VBG_NPBAR_Tail(VBG, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//a long NounPhrase out of a PluralNoun (which is a conjunct And) and a NounPhrase Bar.
//NP3( NNS( airlines), CC( and), NNS( airports))
//(NP (NNS airlines) (CC and) (NNS airports))
NP -> conj_COLON_and_NNS_NPBAR_Tail(NNS, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :conj:and (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?2))),?1)

//a long NounPhrase out of a  NounPhrase Bar and a Adverb (which is a adverbial modifier). 
//NP3( RB( about), DT( the), NN( cost))
//(NP (RB about) (DT the) (NN cost))
NP -> advmod_RB_NPBAR_Tail(RBbasic, NP_BAR)
[tree] @(?2,?1)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//tail
//

//End of a NounPhrase out of a CardinalNumber (which is a numeric modifier) and a PluralNoun.
//NP3( CD( _DIGITS_), CD( million), NNS( shares))
//(NP (CD 18) (CD million) (NNS shares))
NP_BAR -> nummod_CD_NNS_Tail(CD,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a PluralNounand a PossessiveEnding (which is a case marking). 
//NP3( DT( a), NNS( screenwriters), POS( _SQ_))
//(NP (DT a) (NNS screenwriters) (POS '))
NP_BAR -> case_NNS_POS_Tail(NNS,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//End of a NounPhrase out of a Adjective (which is a adjectival modifier) and a Noun.
//NP3( CD( One), JJ( big), NN( reason))
//(NP (CD One) (JJ big) (NN reason))
NP_BAR -> amod_JJ_NN_Tail(JJbasic,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PrepositionOrSubordinatingConjunction (which is a adjectival modifier) and a SingularProperNoun.
//NP3( NNP( April), IN( through), NNP( June))
//(NP (NNP April) (IN through) (NNP June))
NP_BAR -> amod_IN_NNP_Tail(IN,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PastParticipleVerb (which is a adjectival modifier) and a PluralNoun.
//NP3( CD( _DIGITS_COMMA_DIGITS_), VBN( enclosed), NNS( railcars))
//(NP (CD 1,000) (VBN enclosed) (NNS railcars))
NP_BAR -> amod_VBN_NNS_Tail(VBN,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a SingularProperNoun (which is a compound) and a PluralProperNoun.
//NP3( DT( the), NNP( National), NNPS( Institutes))
//(NP (DT the) (NNP National) (NNPS Institutes))
NP_BAR -> compound_NNP_NNPS_Tail(NNP,NNPS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two SingularProperNoun-s.
//NP3( NNP( Greenville), PUNCT( _COMMA_), NNP( N_PERIOD_C_PERIOD_))
//(NP (NNP Greenville) (, ,) (NNP N.C.))
NP -> undependent_PUNCT_NNP_Tail(PUNCT,NNP)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a Determiner (which is a determiner) and a CardinalNumber.
//NP3( RB( just), DT( another), CD( one))
//(NP (RB just) (DT another) (CD one))
NP_BAR -> det_DT_CD_Tail(DT,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//End of a NounPhrase End out of two Punctuation-s.
//NP3( DT( the), NNP( U_PERIOD_S_PERIOD_), PUNCT( _PERIOD_))
//(NP (DT the) (NNP U.S.) (. .))
NP -> undependent_NNP_PUNCT_Tail(NNP,PUNCT)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a Adjective (which is a adjectival modifier) and a PluralNoun.
//NP3( CD( _DIGITS_COMMA_DIGITS_COMMA_DIGITS_), JJ( common), NNS( shares))
//(NP (CD 1,050,000) (JJ common) (NNS shares))
NP_BAR -> amod_JJ_NNS_Tail(JJbasic,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PluralProperNoun (which is a compound) and a SingularProperNoun.
//NP3( DT( the), NNPS( Writers), NNP( Guild))
//(NP (DT the) (NNPS Writers) (NNP Guild))
NP_BAR -> compound_NNPS_NNP_Tail(NNPS,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Noun (which is a compound) and a Noun.
//NP3( CD( _DIGITS_), NN( pretax), NN( profit))
//(NP (CD 1988) (NN pretax) (NN profit))
NP_BAR -> compound_NN_NN_Tail(NNbasic,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a CoordinatingConjunction (which is a coordinating conjunction) and a CardinalNumber.
//NP3( CD( _DIGITS_), CC( and), CD( _DIGITS_))
//(NP (CD 1985) (CC and) (CD 1986))
NP_BAR -> cc_CC_CD_Tail(CC,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :cc (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two Adjective-s.
//NP3( JJ( good), CC( and), JJ( evil))
//(NP (JJ good) (CC and) (JJ evil))
NP -> undependent_CC_JJ_Tail(CC,JJbasic)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase End out of two Noun-s.
//NP3( DT( a), PUNCT( _IQ_IQ_), NN( mirror))
//(NP (DT a) (`` ``) (NN mirror))
NP -> undependent_PUNCT_NN_Tail(PUNCT,NNbasic)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a Determiner (which is a determiner) and a Adjective.
//NP3( IN( about), DT( the), JJ( same))
//(NP (IN about) (DT the) (JJ same))
NP_BAR -> det_DT_JJ_Tail(DT,JJbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//End of a NounPhrase out of a SingularProperNoun (which is a compound) and a Noun.
//NP3( CD( one), NNP( U_PERIOD_S_PERIOD_), NN( investor))
//(NP (CD one) (NNP U.S.) (NN investor))
NP_BAR -> compound_NNP_NN_Tail(NNP,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Determiner (which is a determiner) and a PluralNoun.
//NP3( PDT( all), DT( the), NNS( answers))
//(NP (PDT all) (DT the) (NNS answers))
NP_BAR -> det_DT_NNS_Tail(DT,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//End of a NounPhrase out of a SingularProperNoun (which is a compound) and a PluralNoun.
//NP3( CD( _DIGITS_COMMA_DIGITS_), NNP( U_PERIOD_S_PERIOD_), NNS( households))
//(NP (CD 5,000) (NNP U.S.) (NNS households))
NP_BAR -> compound_NNP_NNS_Tail(NNP,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Adverb (which is a adverbial modifier) and a PluralNoun.
//NP3( NNP( LONDON), RB( LATE), NNS( EURODOLLARS))
//(NP (NNP LONDON) (RB LATE) (NNS EURODOLLARS))
NP_BAR -> advmod_RB_NNS_Tail(RBbasic,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a Nounand a CardinalNumber (which is a numeric modifier). 
//NP3( DT( the), NN( top), CD( _DIGITS_))
//(NP (DT the) (NN top) (CD 10))
NP_BAR -> nummod_NN_CD_Tail(NNbasic,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase out of a ComparativeAdjective (which is a adjectival modifier) and a PluralNoun.
//NP3( CD( _DIGITS_COMMA_DIGITS_), JJR( more), NNS( couples))
//(NP (CD 6,000) (JJR more) (NNS couples))
NP_BAR -> amod_JJR_NNS_Tail(JJR,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Determiner (which is a determiner) and a SingularProperNoun.
//NP3( NNP( Marina), DT( del), NNP( Rey))
//(NP (NNP Marina) (DT del) (NNP Rey))
NP_BAR -> det_DT_NNP_Tail(DT,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//End of a NounPhrase End out of a Nounand a Adjective (which is a adjectival modifier). 
//NP3( DT( an), NN( intraday), JJ( low))
//(NP (DT an) (NN intraday) (JJ low))
NP_BAR -> amod_NN_JJ_Tail(NNbasic,JJbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase End out of a ComparativeAdjectiveand a CardinalNumber (which is a numeric modifier). 
//NP3( DT( the), JJR( larger), CD( _DIGITS_))
//(NP (DT the) (JJR larger) (CD 767))
NP_BAR -> nummod_JJR_CD_Tail(JJR,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase End out of two Punctuation-s.
//NP3( JJ( long), NNS( delays), PUNCT( _SQ_SQ_))
//(NP (JJ long) (NNS delays) ('' ''))
NP -> undependent_NNS_PUNCT_Tail(NNS,PUNCT)
[tree] NP3(*,?1,?2)
[ud] ?2
[fourlang] ?2

//End of a NounPhrase out of a Adverb (which is a adverbial modifier) and a SuperlativeAdjective.
//NP3( DT( the), RB( very), JJS( least))
//(NP (DT the) (RB very) (JJS least))
NP_BAR -> advmod_RB_JJS_Tail(RBbasic,JJS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a SingularProperNounand a CardinalNumber (which is a numeric modifier). 
//NP3( DT( the), NNP( Reagan), CD( _SQ_DIGITS_s))
//(NP (DT the) (NNP Reagan) (CD '80s))
NP_BAR -> nummod_NNP_CD_Tail(NNP,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase out of a Noun (which is a unspecified dependency) and a ComparativeAdjective.
//NP3( DT( a), NN( year), JJR( earlier))
//(NP (DT a) (NN year) (JJR earlier))
NP_BAR -> dep_NN_JJR_Tail(NNbasic,JJR)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a Adjectiveand a Determiner (which is a unspecified dependency). 
//NP3( DT( the), JJ( first), DT( half))
//(NP (DT the) (JJ first) (DT half))
NP_BAR -> dep_JJ_DT_Tail(JJbasic,DT)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase End out of a PluralNounand a Adverb (which is a adverbial modifier). 
//NP3( DT( the), NNS( markets), RB( here))
//(NP (DT the) (NNS markets) (RB here))
NP_BAR -> advmod_NNS_RB_Tail(NNS,RBbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :advmod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase out of a PossessivePronoun (which is a possessive nominal modifier) and a PluralNoun.
//NP3( PDT( all), PRP_DOLLAR_( his), NNS( apples))
//(NP (PDT all) (PRP$ his) (NNS apples))
NP_BAR -> nmod_COLON_poss_PRP_DOLLAR__NNS_Tail(PRP_DOLLAR_,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nmod:poss (d<dep>))", r_dep(?2))),?1)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root>/HAS :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?2))), r_dep1(?1)))

//End of a NounPhrase End out of a Nounand a PossessiveEnding (which is a case marking). 
//NP3( CD( one), NN( month), POS( _SQ_s))
//(NP (CD one) (NN month) (POS 's))
NP_BAR -> case_NN_POS_Tail(NNbasic,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//End of a NounPhrase out of a PluralNoun (which is a compound) and a PluralNoun.
//NP3( DT( any), NNS( securities), NNS( activities))
//(NP (DT any) (NNS securities) (NNS activities))
NP_BAR -> compound_NNS_NNS_Tail(NNS,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two SingularProperNoun-s.
//NP3( NNP( Asia), CC( or), NNP( Europe))
//(NP (NNP Asia) (CC or) (NNP Europe))
NP -> undependent_CC_NNP_Tail(CC,NNP)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a Gerund|PresentParticipleVerb (which is a adjectival modifier) and a PluralNoun.
//NP3( DT( all), VBG( trading), NNS( nations))
//(NP (DT all) (VBG trading) (NNS nations))
NP_BAR -> amod_VBG_NNS_Tail(VBG,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two Noun-s.
//NP3( DT( all), CC( or), NN( part))
//(NP (DT all) (CC or) (NN part))
NP -> undependent_CC_NN_Tail(CC,NNbasic)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a Adjective (which is a adjectival modifier) and a SingularProperNoun.
//NP3( DT( a), JJ( mid_HYPHEN_size), NNP( Chevrolet))
//(NP (DT a) (JJ mid-size) (NNP Chevrolet))
NP_BAR -> amod_JJ_NNP_Tail(JJbasic,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two PluralNoun-s.
//NP3( NN( appreciation), CC( and), NNS( dividends))
//(NP (NN appreciation) (CC and) (NNS dividends))
NP -> undependent_CC_NNS_Tail(CC,NNS)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase End out of two Punctuation-s.
//NP3( JJ( imminent), NN( use), PUNCT( _SQ_SQ_))
//(NP (JJ imminent) (NN use) ('' ''))
NP -> undependent_NN_PUNCT_Tail(NNbasic,PUNCT)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a PrepositionOrSubordinatingConjunction (which is a adjectival modifier) and a PluralNoun.
//NP3( PRP_DOLLAR_( their), IN( down), NNS( payments))
//(NP (PRP$ their) (IN down) (NNS payments))
NP_BAR -> amod_IN_NNS_Tail(IN,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two PluralNoun-s.
//NP3( DT( all), PUNCT( _SQ_SQ_), NNS( students))
//(NP (DT all) ('' '') (NNS students))
NP -> undependent_PUNCT_NNS_Tail(PUNCT,NNS)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase End out of a PluralNounand a Adjective (which is a adjectival modifier). 
//NP3( CD( _DIGITS_), NNS( years), JJ( old))
//(NP (CD 59) (NNS years) (JJ old))
NP_BAR -> amod_NNS_JJ_Tail(NNS,JJbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase End out of a Adjectiveand a Gerund|PresentParticipleVerb (which is a adjectival modifier). 
//NP3( DT( a), JJ( steady), VBG( ratcheting))
//(NP (DT a) (JJ steady) (VBG ratcheting))
NP_BAR -> amod_JJ_VBG_Tail(JJbasic,VBG)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase out of a Gerund|PresentParticipleVerb (which is a adjectival modifier) and a SingularProperNoun.
//NP3( DT( the), VBG( leading), NNP( Sauternes))
//(NP (DT the) (VBG leading) (NNP Sauternes))
NP_BAR -> amod_VBG_NNP_Tail(VBG,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a ComparativeAdjective (which is a adjectival modifier) and a Noun.
//NP3( DT( a), JJR( better), NN( record))
//(NP (DT a) (JJR better) (NN record))
NP_BAR -> amod_JJR_NN_Tail(JJR,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a CardinalNumberand a PossessiveEnding (which is a case marking). 
//NP3( JJ( fiscal), CD( _DIGITS_), POS( _SQ_s))
//(NP (JJ fiscal) (CD 1989) (POS 's))
NP_BAR -> case_CD_POS_Tail(CD,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//End of a NounPhrase out of a Adjective (which is a adjectival modifier) and a CardinalNumber.
//NP3( DT( A), JJ( medium_HYPHEN_sized), CD( one))
//(NP (DT A) (JJ medium-sized) (CD one))
NP_BAR -> amod_JJ_CD_Tail(JJbasic,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Adjective (which is a adjectival modifier) and a Adjective.
//NP3( DT( a), JJ( distant), JJ( third))
//(NP (DT a) (JJ distant) (JJ third))
NP_BAR -> amod_JJ_JJ_Tail(JJbasic,JJbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Noun (which is a compound) and a PluralNoun.
//NP3( CD( _DIGITS_COMMA_DIGITS_), NN( parking), NNS( spaces))
//(NP (CD 10,000) (NN parking) (NNS spaces))
NP_BAR -> compound_NN_NNS_Tail(NNbasic,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a SuperlativeAdjective (which is a adjectival modifier) and a PluralNoun.
//NP3( DT( the), JJS( biggest), NNS( issuers))
//(NP (DT the) (JJS biggest) (NNS issuers))
NP_BAR -> amod_JJS_NNS_Tail(JJS,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two Noun-s.
//NP3( CD( _DIGITS_), CD( _DIGITS_BSL_PER_DIGITS_), NN( _PERCENT_))
//(NP (CD 10) (CD 1\/2) (NN %))
NP -> undependent_CD_NN_Tail(CD,NNbasic)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase End out of a Nounand a 3rdPersonSingularPresentVerb (which is a unspecified dependency). 
//NP3( DT( the), NN( crystal), VBZ( changes))
//(NP (DT the) (NN crystal) (VBZ changes))
NP_BAR -> dep_NN_VBZ_Tail(NNbasic,VBZ)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :dep (d<dep>))", r_dep(?1))),?2)
[fourlang] merge(f_dep(merge("(r<root> :_ (d<dep>))", r_dep(?1))),?2)

//End of a NounPhrase out of a SuperlativeAdjective (which is a adjectival modifier) and a Adverb.
//NP3( DT( the), JJS( largest), RB( newsweekly))
//(NP (DT the) (JJS largest) (RB newsweekly))
NP_BAR -> amod_JJS_RB_Tail(JJS,RBbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of a PluralProperNounand a PossessiveEnding (which is a case marking). 
//NP3( NNP( Sea), NNPS( Containers), POS( _SQ_))
//(NP (NNP Sea) (NNPS Containers) (POS '))
NP_BAR -> case_NNPS_POS_Tail(NNPS,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//End of a NounPhrase End out of two Punctuation-s.
//NP3( CD( _DIGITS_COLON_DIGITS_), RB( p_PERIOD_m), PUNCT( _PERIOD_))
//(NP (CD 1:30) (RB p.m) (. .))
NP -> undependent_RB_PUNCT_Tail(RBbasic,PUNCT)
[tree] NP3(*,?1,?2)
[ud] ?2
[fourlang] ?2

//End of a NounPhrase out of a CardinalNumber (which is a numeric modifier) and a CardinalNumber.
//NP3( DT( Some), CD( _DIGITS_PERIOD_DIGITS_), CD( million))
//(NP (DT Some) (CD 3.8) (CD million))
NP_BAR -> nummod_CD_CD_Tail(CD,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a SuperlativeAdjective (which is a adjectival modifier) and a Noun.
//NP3( DT( the), JJS( best), NN( position))
//(NP (DT the) (JJS best) (NN position))
NP_BAR -> amod_JJS_NN_Tail(JJS,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase End out of two Determiner-s.
//NP3( NN( part), CC( or), DT( all))
//(NP (NN part) (CC or) (DT all))
NP -> undependent_CC_DT_Tail(CC,DT)
[tree] NP3(*,?1,?2)
[ud] ?1
[fourlang] ?1

//End of a NounPhrase out of a CardinalNumber (which is a numeric modifier) and a SingularProperNoun.
//NP3( PRP_DOLLAR_( its), CD( _DIGITS_), NNP( Corton_HYPHEN_Charlemagne))
//(NP (PRP$ its) (CD 1987) (NNP Corton-Charlemagne))
NP_BAR -> nummod_CD_NNP_Tail(CD,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :nummod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Gerund|PresentParticipleVerb (which is a adjectival modifier) and a Noun.
//NP3( DT( an), VBG( underlying), NN( investment))
//(NP (DT an) (VBG underlying) (NN investment))
NP_BAR -> amod_VBG_NN_Tail(VBG,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PastParticipleVerb (which is a adjectival modifier) and a CardinalNumber.
//NP3( DT( a), VBN( revised), CD( _DIGITS_PERIOD_DIGITS_))
//(NP (DT a) (VBN revised) (CD 116.3))
NP_BAR -> amod_VBN_CD_Tail(VBN,CD)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PastTenseVerb (which is a adjectival modifier) and a PluralNoun.
//NP3( NN( interbank), VBD( offered), NNS( rates))
//(NP (NN interbank) (VBD offered) (NNS rates))
NP_BAR -> amod_VBD_NNS_Tail(VBD,NNS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Noun (which is a compound) and a SingularProperNoun.
//NP3( DT( the), NN( fifth_HYPHEN_grade), NNP( CAT))
//(NP (DT the) (NN fifth-grade) (NNP CAT))
NP_BAR -> compound_NN_NNP_Tail(NNbasic,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a Determiner (which is a determiner) and a Noun.
//NP3( DT( all), DT( the), NN( hoopla))
//(NP (DT all) (DT the) (NN hoopla))
NP_BAR -> det_DT_NN_Tail(DT,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :det (d<dep>))", r_dep(?2))),?1)
[fourlang] ?1

//End of a NounPhrase End out of a SingularProperNounand a PossessiveEnding (which is a case marking). 
//NP3( DT( a), NNP( Moody), POS( _SQ_s))
//(NP (DT a) (NNP Moody) (POS 's))
NP_BAR -> case_NNP_POS_Tail(NNP,POS)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :case (d<dep>))", r_dep(?1))),?2)
[fourlang] f_dep1(merge(f_dep2(merge("(r<root> :1 d1<dep1> :2 (d2<dep2>))", r_dep2(?1))), r_dep1(?2)))

//End of a NounPhrase out of a SingularProperNoun (which is a compound) and a SingularProperNoun.
//NP3( CD( _DIGITS_), NNP( Series), NNP( A_HYPHEN_D))
//(NP (CD 1989) (NNP Series) (NNP A-D))
NP_BAR -> compound_NNP_NNP_Tail(NNP,NNP)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PluralNoun (which is a compound) and a Noun.
//NP3( DT( an), NNS( appropriations), NN( bill))
//(NP (DT an) (NNS appropriations) (NN bill))
NP_BAR -> compound_NNS_NN_Tail(NNS,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :compound (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0_compound (d<dep>))", r_dep(?2))),?1)

//End of a NounPhrase out of a PastParticipleVerb (which is a adjectival modifier) and a Noun.
//NP3( DT( an), VBN( accelerated), NN( investigation))
//(NP (DT an) (VBN accelerated) (NN investigation))
NP_BAR -> amod_VBN_NN_Tail(VBN,NNbasic)
[tree] NP3(*,?1,?2)
[ud] merge(f_dep(merge("(r<root> :amod (d<dep>))", r_dep(?2))),?1)
[fourlang] merge(f_dep(merge("(r<root> :0 (d<dep>))", r_dep(?2))),?1)




//TERMINALS
//TERMINALS

//Converters
//Converters

//Nouns
//Nouns

//basic
NN -> NNbasic_2_NN(NNbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//proper
NN -> NNP_2_NN(NNP)
[tree] ?1
[ud] ?1
[fourlang] ?1

//plural
NN -> NNS_2_NN(NNS)
[tree] ?1
[ud] ?1
[fourlang] ?1

//proper plural
NN -> NNPS_2_NN(NNPS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Adjectives
//Adjectives

//basic
JJ -> JJbasic_2_JJ(JJbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//comparative
JJ -> JJR_2_JJ(JJR)
[tree] ?1
[ud] ?1
[fourlang] ?1

//superlative
JJ -> JJS_2_JJ(JJS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Adverbs
//Adverbs

//basic
RB -> RBbasic_2_RB(RBbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//comparative
RB -> RBR_2_RB(RBR)
[tree] ?1
[ud] ?1
[fourlang] ?1

//superlative
RB -> RBS_2_RB(RBS)
[tree] ?1
[ud] ?1
[fourlang] ?1


//Verbs
//Verbs

//basic
VB -> VBbasic_2_VB(VBbasic)
[tree] ?1
[ud] ?1
[fourlang] ?1

//past tense
VB -> VBD_2_VB(VBD)
[tree] ?1
[ud] ?1
[fourlang] ?1

//gerund or present participle
VB -> VBG_2_VB(VBG)
[tree] ?1
[ud] ?1
[fourlang] ?1

//past participle
VB -> VBN_2_VB(VBN)
[tree] ?1
[ud] ?1
[fourlang] ?1

//non-3rd person singular present
VB -> VBP_2_VB(VBP)
[tree] ?1
[ud] ?1
[fourlang] ?1

//3rd person singular present
VB -> VBZ_2_VB(VBZ)
[tree] ?1
[ud] ?1
[fourlang] ?1



//Dictionary
//Dictionary

//Word
//struff
NNbasic -> stuff_NN
[tree] NN(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
NNS -> stuff_NNS
[tree] NNS(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
NNP -> stuff_NNP
[tree] NNP(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
NNPS -> stuff_NNPS
[tree] NNPS(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
DT -> stuff_DT
[tree] DT(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
JJbasic -> stuff_JJ
[tree] JJ(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
JJR -> stuff_JJR
[tree] JJR(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
JJS -> stuff_JJS
[tree] JJS(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

/*
//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"

//Word
//struff
WD -> stuff_WD
[tree] WD(stuff)
[ud] "(stuff<root>/stuff)"
[fourlang] "(stuff<root>/stuff)"
*/
